---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: autobrr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: longhorn
      namespace: longhorn-system
  values:
    controllers:
      autobrr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.6.0@sha256:86a1992d46273c58fd4ad95b626081dfaabfe16bd56944675169e406d1a660dd
            envFrom: &envFrom
              - secretRef:
                  name: autobrr-secret
        containers:
          app:
            image:
              repository: ghcr.io/autobrr/autobrr
              tag: v1.67.0@sha256:af3fbcfa5f12b4bea8dc3338571071ed98e4caebb204cd50a31d5eff0a08152f
            env:
              TZ: ${TIMEZONE}
              AUTOBRR__CHECK_FOR_UPDATES: "false"
              AUTOBRR__HOST: 0.0.0.0
              AUTOBRR__PORT: &port 80
              AUTOBRR__LOG_LEVEL: INFO
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/healthz/liveness
                    port: *port
                  initialDelaySeconds: 30
                  periodSeconds: 20
                  timeoutSeconds: 5
                  failureThreshold: 5
              readiness: *probes
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 256Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: autobrr
        ports:
          http:
            port: *port
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: Modern Download Automation
          gethomepage.dev/group: Media Management
          gethomepage.dev/icon: autobrr
          gethomepage.dev/name: Autobrr
          gethomepage.dev/widget.type: autobrr
          gethomepage.dev/widget.url: http://autobrr.default.svc.cluster.local
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_AUTOBRR_TOKEN}}` }}"
        className: internal
        hosts:
          - host: autobrr.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: autobrr
      config-log:
        type: emptyDir
        globalMounts:
          - path: /config/log
      tmp:
        type: emptyDir
