---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: calibre-web-automated
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: longhorn
      namespace: longhorn-system
  values:
    controllers:
      calibre-web:
        labels:
          nfsMount: "true"
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: crocodilestick/calibre-web-automated
              tag: V3.0.4
            env:
              CACHE_DIR: /cache
              TZ: "${TIMEZONE}"
              PUID: 1000
              PGID: 1000
              DOCKER_MODS: >-
                {{- $items := list
                  "// renovate: lsio-docker-mod"
                  "ghcr.io/linuxserver/mods:universal-calibre-v7.26.0"
                -}}
                {{- $filtered := list -}}
                {{- range $item := $items -}}
                  {{- if not (hasPrefix "//" $item) -}}
                    {{- $filtered = append $filtered $item -}}
                  {{- end -}}
                {{- end -}}
                {{- $filtered | join "|" -}}
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  initialDelaySeconds: 60
                  failureThreshold: 45
                  periodSeconds: 5
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 2Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
        runAsGroup: 1000
        fsGroup: 0
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: calibre-web
        ports:
          http:
            port: 8083
    ingress:
      app:
        className: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media Management
          gethomepage.dev/name: Calibre
          gethomepage.dev/icon: calibre.png
          gethomepage.dev/widget.type: calibreweb
          gethomepage.dev/widget.url: http://calibre-web-automated.default.svc.cluster.local:8083
          gethomepage.dev/widget.username: "{{`{{HOMEPAGE_VAR_CALIBRE_USERNAME}}`}}"
          gethomepage.dev/widget.password: "{{`{{HOMEPAGE_VAR_CALIBRE_PASSWORD}}`}}"
        hosts:
          - host: "calibre-web.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: calibre-web
        advancedMounts:
          calibre-web:
            app:
              - path: /config
      ebooks:
        type: nfs
        server: unraid.lan.${SECRET_DOMAIN}
        path: /mnt/user/data/Media/Ebooks
        advancedMounts:
          calibre-web:
            app:
              - path: /calibre-library
      ingest:
        type: nfs
        server: unraid.lan.${SECRET_DOMAIN}
        path: /mnt/user/data/Media/downloads/cwa-book-ingest
        advancedMounts:
          calibre-web:
            app:
              - path: /cwa-book-ingest
      cache:
        type: emptyDir
        globalMounts:
          - path: /cache
