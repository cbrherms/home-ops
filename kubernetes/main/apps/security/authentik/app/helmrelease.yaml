---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app authentik
spec:
  interval: 30m
  chart:
    spec:
      chart: authentik
      version: 2025.6.3
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    global:
      image:
        pullPolicy: Always
      deploymentAnnotations:
        secret.reloader.stakater.com/reload: "authentik-secret"
      env:
        - name: TZ
          value: Europe/London
        - name: AUTHENTIK_SESSION_STORAGE
          value: db
      envFrom:
        - secretRef:
            name: authentik-secret
    authentik:
      log_level: info
      avatars: "gravatar,initials"
      email:
        host: smtp-relay.network.svc.cluster.local
        port: 25
        from: "Authentik <authentik@noreply.${SECRET_DOMAIN}>"
      error_reporting:
        enable: false
        send_pii: false
      outposts:
        container_image_base: ghcr.io/goauthentik/%(type)s:%(version)s
      # https://github.com/goauthentik/authentik/pull/7118
      # https://github.com/goauthentik/authentik/issues/1285
      redis:
        host: "dragonfly.database-system.svc.cluster.local"
    server:
      initContainers:
        - name: init-db
          image: ghcr.io/home-operations/postgres-init:17.5.0@sha256:e0c87ce7df39d06b93f27cf2cc6a056611f13faaa88cc07ab4dc8bf7a85d0b11
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: authentik-secret
      metrics:
        serviceMonitor:
          enabled: true
      autoscaling:
        enabled: true
        minReplicas: 1
        maxReplicas: 3
      resources:
        requests:
          cpu: 200m
      ingress:
        enabled: true
        ingressClassName: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: authentik.png
          gethomepage.dev/name: Authentik
          gethomepage.dev/group: Infrastructure
          gethomepage.dev/app: authentik
          gethomepage.dev/description: OIDC User Management
          gethomepage.dev/widget.type: authentik
          gethomepage.dev/widget.url: http://authentik-server.security.svc.cluster.local
          gethomepage.dev/widget.key: "{{HOMEPAGE_VAR_AUTHENTIK_TOKEN}}"
        hosts:
          - auth.${SECRET_DOMAIN}
        https: false
    worker:
      autoscaling:
        enabled: true
        minReplicas: 1
        maxReplicas: 3
      resources:
        requests:
          cpu: 200m
    geoip:
      enabled: false
      existingSecret:
        secretName: "authentik-secret"
        accountId: "MAXMIND_ACCOUNT_ID"
        licenseKey: "MAXMIND_LICENSE_KEY"
    prometheus:
      rules:
        enabled: true
    postgresql:
      enabled: false
    redis:
      enabled: false
